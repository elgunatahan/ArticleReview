version: '3.4'

services:
  articleapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - MONGO_CONNECTION_STRING=mongodb://mongodb_article:27017/articleDB
      - REDIS_CONNECTION_STRING=redis_article:6379
      - JwtVK=${JwtVK}
      - JwtIssuer=${JwtIssuer}
    image: ${DOCKER_REGISTRY-}articleapi
    ports:
      - "7000:8080"
      - "7001:8081"
    build:
      context: .
      dockerfile: Services/Article/ArticleApi/Dockerfile
    depends_on:
      - mongodb_article
      - redis_article
    networks:
      - my_network

  reviewapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - MONGO_CONNECTION_STRING=mongodb://mongodb_review:27017/reviewDB
      - REDIS_CONNECTION_STRING=redis_review:6379
      - ARTICLE_API_BASE_URL=http://articleapi:8080
      - JwtVK=${JwtVK}
      - JwtIssuer=${JwtIssuer}
    image: ${DOCKER_REGISTRY-}reviewapi
    ports:
      - "7002:8080"
      - "7003:8081"
    build:
      context: .
      dockerfile: Services/Review/ReviewApi/Dockerfile
    depends_on:
      - mongodb_review
      - redis_review
    networks:
      - my_network

  mongodb_article:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data_article:/data/db
    networks:
      - my_network

  mongodb_review:
    image: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo_data_review:/data/db
    networks:
      - my_network

  redis_article:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - my_network

  redis_review:
    image: redis:6
    ports:
      - "6380:6379"
    networks:
      - my_network

  authapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - MONGO_CONNECTION_STRING=mongodb://mongodb_auth:27017/authDB
      - JwtAK=${JwtAK}
      - JwtIssuer=${JwtIssuer}
    image: ${DOCKER_REGISTRY-}authapi
    build:
      context: .
      dockerfile: Services/Auth/AuthApi/Dockerfile
    ports:
      - "7004:8080"
      - "7005:8081"
    depends_on:
      - mongodb_auth
    networks:
      - my_network

  mongodb_auth:
    image: mongo
    ports:
      - "27019:27017"
    volumes:
      - mongo_data_auth:/data/db
    networks:
      - my_network
volumes:
  mongo_data_article:
  mongo_data_review:
  mongo_data_auth:

networks:
  my_network:
